--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v80=0;local v81;while true do if (v80==0) then v81=v2(v0(v30,16));if v19 then local v96=v5(v81,v19);v19=nil;return v96;else return v81;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-1)))%((5 -3)^(((v33-(1 -0)) -(v32-(2 -1))) + 1)) ;return v82-(v82%1) ;else local v83=(621 -(555 + 17 + 47))^(v32-(932 -(857 + 74))) ;return (((v31%(v83 + v83))>=v83) and ((90 + 479) -(367 + 201))) or (927 -(214 + 713)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (879 -(282 + 595)) );v18=v18 + (1639 -(1523 + 114)) ;return (v36 * (231 + 25)) + v35 ;end local function v23() local v37=0 -0 ;local v38;local v39;local v40;local v41;while true do if (v37==((2023 -(892 + 65)) -(68 + 997))) then return (v41 * (40022563 -23245347)) + (v40 * (66806 -(226 + 1044))) + (v39 * 256) + v38 ;end if (v37==(0 -0)) then v38,v39,v40,v41=v1(v16,v18,v18 + (120 -(32 + 85)) );v18=v18 + 4 + (0 -0) ;v37=1 + (0 -0) ;end end end local function v24() local v42=v23();local v43=v23();local v44=1 + 0 ;local v45=(v20(v43,351 -(87 + 263) ,20) * ((182 -(67 + 113))^(24 + (13 -5)))) + v42 ;local v46=v20(v43,51 -30 ,31);local v47=((v20(v43,24 + 8 + 0 )==(3 -(793 -(368 + 423)))) and  -1) or (953 -(802 + 150)) ;if (v46==0) then if (v45==(0 -0)) then return v47 * (0 -0) ;else v46=(3 -2) + 0 ;v44=997 -(915 + 82) ;end elseif (v46==(5796 -3749)) then return ((v45==(0 + 0)) and (v47 * ((1 -0)/0))) or (v47 * NaN) ;end return v8(v47,v46-(2210 -(1069 + 118)) ) * (v44 + (v45/((4 -2)^(113 -61)))) ;end local function v25(v48) local v49=18 -(10 + 8) ;local v50;local v51;while true do if (v49==(11 -8)) then return v6(v51);end if (v49==(442 -(416 + 26))) then v50=nil;if  not v48 then v48=v23();if (v48==((0 + 0) -0)) then return "";end end v49=1 + (772 -(201 + 571)) ;end if (v49==2) then v51={};for v89=1 -0 , #v50 do v51[v89]=v2(v1(v3(v50,v89,v89)));end v49=441 -(145 + 293) ;end if (v49==(431 -((1182 -(116 + 1022)) + 386))) then v50=v3(v16,v18,(v18 + v48) -(1487 -(998 + 488)) );v18=v18 + v48 ;v49=(4 -3) + 1 + 0 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v52~=(0 + 0)) then else local v87=396 -(115 + 281) ;while true do if ((0 -0)==v87) then v53=0;v54=nil;v87=1 + 0 ;end if ((2 -1)==v87) then v52=3 -2 ;break;end end end if (v52==(870 -(550 + 317))) then v59=nil;while true do local v91=0 -0 ;while true do if (v91~=0) then else local v97=0 -0 ;while true do if (v97==1) then v91=1;break;end if (v97~=(0 -0)) then else if ((287 -(134 + 151))~=v53) then else local v101=0;local v102;local v103;while true do if (v101==0) then v102=0;v103=nil;v101=1;end if (v101==1) then while true do if (v102==(1665 -(970 + 695))) then v103=0;while true do if (v103~=1) then else for v411=1 -0 ,v23() do local v412=0;local v413;while true do if ((1990 -(582 + 1408))~=v412) then else v413=v21();if (v20(v413,1,1)~=0) then else local v438=0 -0 ;local v439;local v440;local v441;local v442;while true do if (v438==2) then while true do if (v439==2) then if (v20(v441,1 -0 ,3 -2 )~=1) then else v442[2]=v59[v442[1826 -(1195 + 629) ]];end if (v20(v441,2 -0 ,243 -(187 + 54) )==1) then v442[783 -(162 + 618) ]=v59[v442[3 + 0 ]];end v439=2 + 1 ;end if (v439~=0) then else v440=v20(v413,2,6 -3 );v441=v20(v413,6 -2 ,6);v439=1 + 0 ;end if ((1637 -(1373 + 263))==v439) then local v446=0;while true do if (v446==(1001 -(451 + 549))) then v439=1 + 1 ;break;end if (0~=v446) then else local v455=0;while true do if (v455==0) then v442={v22(),v22(),nil,nil};if (v440==0) then local v456=0;while true do if (v456==0) then v442[2 + 1 ]=v22();v442[4]=v22();break;end end elseif (v440==(1 -0)) then v442[344 -(218 + 123) ]=v23();elseif (v440==(1583 -(1535 + 46))) then v442[3]=v23() -((2 + 0)^16) ;elseif (v440==(1 + 2)) then local v461=560 -(306 + 254) ;local v462;while true do if ((0 + 0)~=v461) then else v462=0;while true do if (v462~=(0 -0)) then else v442[3]=v23() -((1469 -(899 + 568))^(11 + 5)) ;v442[4]=v22();break;end end break;end end end v455=2 -1 ;end if (1~=v455) then else v446=1;break;end end end end end if ((606 -(268 + 335))==v439) then if (v20(v441,293 -(60 + 230) ,575 -(426 + 146) )==(1 + 0)) then v442[1460 -(282 + 1174) ]=v59[v442[4]];end v54[v411]=v442;break;end end break;end if (v438==(811 -(569 + 242))) then v439=0;v440=nil;v438=2 -1 ;end if (v438==1) then v441=nil;v442=nil;v438=2;end end end break;end end end v53=3;break;end if (0==v103) then local v400=0 + 0 ;while true do if (v400==1) then v103=1025 -(706 + 318) ;break;end if (v400==(1251 -(721 + 530))) then for v425=1272 -(945 + 326) ,v58 do local v426=0 -0 ;local v427;local v428;local v429;while true do if (v426==(0 + 0)) then local v443=0;while true do if (0~=v443) then else v427=700 -(271 + 429) ;v428=nil;v443=1;end if ((1 + 0)==v443) then v426=1501 -(1408 + 92) ;break;end end end if (v426~=1) then else v429=nil;while true do if (v427~=0) then else local v444=1086 -(461 + 625) ;while true do if (v444==1) then v427=1;break;end if (v444~=0) then else local v448=1288 -(993 + 295) ;while true do if (v448~=(1 + 0)) then else v444=1;break;end if (v448==(1171 -(418 + 753))) then v428=v21();v429=nil;v448=1;end end end end end if (v427==(1 + 0)) then if (v428==(1 + 0)) then v429=v21()~=(0 + 0) ;elseif (v428==(1 + 1)) then v429=v24();elseif (v428~=3) then else v429=v25();end v59[v425]=v429;break;end end break;end end end v57[3]=v21();v400=1;end end end end break;end end break;end end end if (v53~=3) then else local v104=529 -(406 + 123) ;local v105;local v106;while true do if (v104==(1770 -(1749 + 20))) then while true do if (v105==(0 + 0)) then v106=1322 -(1249 + 73) ;while true do if (v106==(0 + 0)) then local v401=0;while true do if (v401~=0) then else for v430=1146 -(466 + 679) ,v23() do v55[v430-(2 -1) ]=v28();end return v57;end end end end break;end end break;end if (v104==(0 -0)) then v105=1900 -(106 + 1794) ;v106=nil;v104=1;end end end v97=1 + 0 ;end end end if (v91~=1) then else if (v53==0) then local v98=0 + 0 ;local v99;while true do if ((0 -0)~=v98) then else v99=0;while true do if (v99==(2 -1)) then v56={};v53=1;break;end if (v99~=(114 -(4 + 110))) then else local v122=584 -(57 + 527) ;while true do if (v122~=0) then else v54={};v55={};v122=1;end if (v122~=1) then else v99=1;break;end end end end break;end end end if (v53==1) then local v100=1427 -(41 + 1386) ;while true do if (v100==(103 -(17 + 86))) then local v107=0 + 0 ;while true do if (v107==1) then v100=1 -0 ;break;end if (v107~=(0 -0)) then else local v123=166 -(122 + 44) ;while true do if (v123==1) then v107=1 -0 ;break;end if (v123==0) then v57={v54,v55,nil,v56};v58=v23();v123=1;end end end end end if ((1 + 0)==v100) then v59={};v53=2;break;end end end break;end end end break;end if (v52==2) then local v88=0 + 0 ;while true do if ((1 -0)==v88) then v52=68 -(30 + 35) ;break;end if ((0 + 0)==v88) then v57=nil;v58=nil;v88=1;end end end if (v52==1) then v55=nil;v56=nil;v52=1259 -(1043 + 214) ;end end end local function v29(v60,v61,v62) local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...) local v66=v63;local v67=v64;local v68=v65;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v84=0,v74 do if (v84>=v68) then v72[v84-v68 ]=v73[v84 + 1 ];else v76[v84]=v73[v84 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do v78=v66[v70];v79=v78[1];if (v79<=60) then if (v79<=29) then if (v79<=14) then if (v79<=6) then if (v79<=2) then if (v79<=0) then v76[v78[2]][v76[v78[3]]]=v76[v78[4]];elseif (v79>1) then local v135=0;local v136;local v137;while true do if (v135==1) then for v383=1, #v75 do local v384=0;local v385;while true do if (v384==0) then v385=v75[v383];for v418=0, #v385 do local v419=v385[v418];local v420=v419[1];local v421=v419[2];if ((v420==v76) and (v421>=v136)) then v137[v421]=v420[v421];v419[1]=v137;end end break;end end end break;end if (v135==0) then v136=v78[2];v137={};v135=1;end end else v76[v78[2]][v78[3]]=v76[v78[4]];end elseif (v79<=4) then if (v79==3) then local v140=v78[2];local v141=v76[v140];local v142=v78[3];for v295=1,v142 do v141[v295]=v76[v140 + v295 ];end else do return v76[v78[2]];end end elseif (v79>5) then v76[v78[2]]= #v76[v78[3]];else local v144=0;local v145;local v146;while true do if (v144==1) then for v386=v145 + 1 ,v78[3] do v7(v146,v76[v386]);end break;end if (v144==0) then v145=v78[2];v146=v76[v145];v144=1;end end end elseif (v79<=10) then if (v79<=8) then if (v79>7) then local v147=v78[2];v76[v147]=v76[v147](v13(v76,v147 + 1 ,v78[3]));else local v149=v78[2];local v150=v76[v78[3]];v76[v149 + 1 ]=v150;v76[v149]=v150[v78[4]];end elseif (v79>9) then local v154=0;local v155;while true do if (0==v154) then v155=v78[2];v76[v155]=v76[v155](v76[v155 + 1 ]);break;end end else local v156=v78[2];v76[v156](v13(v76,v156 + 1 ,v71));end elseif (v79<=12) then if (v79>11) then v76[v78[2]]=v61[v78[3]];else local v159=v78[2];local v160=v78[4];local v161=v159 + 2 ;local v162={v76[v159](v76[v159 + 1 ],v76[v161])};for v298=1,v160 do v76[v161 + v298 ]=v162[v298];end local v163=v162[1];if v163 then v76[v161]=v163;v70=v78[3];else v70=v70 + 1 ;end end elseif (v79>13) then v76[v78[2]]=v78[3]^v76[v78[4]] ;else do return v76[v78[2]]();end end elseif (v79<=21) then if (v79<=17) then if (v79<=15) then local v110=v67[v78[3]];local v111;local v112={};v111=v10({},{__index=function(v124,v125) local v126=v112[v125];return v126[1][v126[2]];end,__newindex=function(v127,v128,v129) local v130=v112[v128];v130[1][v130[2]]=v129;end});for v132=1,v78[4] do v70=v70 + 1 ;local v133=v66[v70];if (v133[1]==61) then v112[v132-1 ]={v76,v133[3]};else v112[v132-1 ]={v61,v133[3]};end v75[ #v75 + 1 ]=v112;end v76[v78[2]]=v29(v110,v111,v62);elseif (v79>16) then v76[v78[2]]=v78[3]~=0 ;else local v166=0;while true do if (v166==0) then v76[v78[2]]=v78[3]~=0 ;v70=v70 + 1 ;break;end end end elseif (v79<=19) then if (v79>18) then if  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else local v167=v76[v78[4]];if  not v167 then v70=v70 + 1 ;else local v330=0;while true do if (v330==0) then v76[v78[2]]=v167;v70=v78[3];break;end end end end elseif (v79==20) then local v168=v76[v78[4]];if  not v168 then v70=v70 + 1 ;else v76[v78[2]]=v168;v70=v78[3];end elseif (v76[v78[2]]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=25) then if (v79<=23) then if (v79>22) then local v169=0;local v170;while true do if (v169==0) then v170=v78[2];v76[v170](v13(v76,v170 + 1 ,v71));break;end end else v76[v78[2]]=v76[v78[3]][v78[4]];end elseif (v79>24) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else do return v76[v78[2]]();end end elseif (v79<=27) then if (v79>26) then v76[v78[2]]=v76[v78[3]][v78[4]];else local v175=v78[3];local v176=v76[v175];for v303=v175 + 1 ,v78[4] do v176=v176   .. v76[v303] ;end v76[v78[2]]=v176;end elseif (v79>28) then local v178=v78[2];v76[v178]=v76[v178]();elseif (v78[2]<v76[v78[4]]) then v70=v78[3];else v70=v70 + 1 ;end elseif (v79<=44) then if (v79<=36) then if (v79<=32) then if (v79<=30) then local v114=0;local v115;local v116;local v117;while true do if (v114==1) then v117={};v116=v10({},{__index=function(v336,v337) local v338=v117[v337];return v338[1][v338[2]];end,__newindex=function(v339,v340,v341) local v342=v117[v340];v342[1][v342[2]]=v341;end});v114=2;end if (v114==2) then for v344=1,v78[4] do v70=v70 + 1 ;local v345=v66[v70];if (v345[1]==61) then v117[v344-1 ]={v76,v345[3]};else v117[v344-1 ]={v61,v345[3]};end v75[ #v75 + 1 ]=v117;end v76[v78[2]]=v29(v115,v116,v62);break;end if (v114==0) then v115=v67[v78[3]];v116=nil;v114=1;end end elseif (v79>31) then local v180=v78[3];local v181=v76[v180];for v306=v180 + 1 ,v78[4] do v181=v181   .. v76[v306] ;end v76[v78[2]]=v181;elseif (v76[v78[2]]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=34) then if (v79==33) then v76[v78[2]]=v76[v78[3]]/v78[4] ;else v61[v78[3]]=v76[v78[2]];end elseif (v79>35) then local v186=v78[2];v76[v186](v13(v76,v186 + 1 ,v78[3]));elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=40) then if (v79<=38) then if (v79==37) then local v187=v78[2];local v188=v76[v78[3]];v76[v187 + 1 ]=v188;v76[v187]=v188[v78[4]];elseif (v78[2]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==39) then local v192=v78[2];do return v13(v76,v192,v71);end else v76[v78[2]]=v61[v78[3]];end elseif (v79<=42) then if (v79>41) then local v195=v78[2];v76[v195]=v76[v195](v13(v76,v195 + 1 ,v71));else local v197=v78[2];v76[v197](v76[v197 + 1 ]);end elseif (v79>43) then v76[v78[2]]=v62[v78[3]];elseif (v78[2]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=52) then if (v79<=48) then if (v79<=46) then if (v79==45) then v76[v78[2]]=v76[v78[3]] * v78[4] ;else v76[v78[2]]=v62[v78[3]];end elseif (v79==47) then v70=v78[3];else v76[v78[2]]=v76[v78[3]] * v76[v78[4]] ;end elseif (v79<=50) then if (v79==49) then local v205=v78[2];local v206=v78[4];local v207=v205 + 2 ;local v208={v76[v205](v76[v205 + 1 ],v76[v207])};for v307=1,v206 do v76[v207 + v307 ]=v208[v307];end local v209=v208[1];if v209 then local v351=0;while true do if (v351==0) then v76[v207]=v209;v70=v78[3];break;end end else v70=v70 + 1 ;end elseif (v76[v78[2]]<v76[v78[4]]) then v70=v78[3];else v70=v70 + 1 ;end elseif (v79==51) then local v210=0;local v211;local v212;local v213;while true do if (v210==1) then v213=0;for v389=v211,v78[4] do v213=v213 + 1 ;v76[v389]=v212[v213];end break;end if (v210==0) then v211=v78[2];v212={v76[v211](v76[v211 + 1 ])};v210=1;end end else local v214=v78[2];v76[v214](v13(v76,v214 + 1 ,v78[3]));end elseif (v79<=56) then if (v79<=54) then if (v79==53) then do return v76[v78[2]];end else local v215=v78[2];local v216={v76[v215](v76[v215 + 1 ])};local v217=0;for v310=v215,v78[4] do v217=v217 + 1 ;v76[v310]=v216[v217];end end elseif (v79>55) then v76[v78[2]]=v76[v78[3]] + v78[4] ;else v76[v78[2]]=v76[v78[3]] * v76[v78[4]] ;end elseif (v79<=58) then if (v79==57) then local v220=0;local v221;while true do if (v220==0) then v221=v78[2];do return v13(v76,v221,v71);end break;end end else v76[v78[2]]={};end elseif (v79>59) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]][v78[3]]=v76[v78[4]];end elseif (v79<=90) then if (v79<=75) then if (v79<=67) then if (v79<=63) then if (v79<=61) then v76[v78[2]]=v76[v78[3]];elseif (v79==62) then local v225=v78[2];local v226=v76[v225];local v227=v78[3];for v313=1,v227 do v226[v313]=v76[v225 + v313 ];end elseif (v76[v78[2]]~=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=65) then if (v79>64) then local v228=v78[2];local v229={v76[v228](v13(v76,v228 + 1 ,v71))};local v230=0;for v316=v228,v78[4] do v230=v230 + 1 ;v76[v316]=v229[v230];end else v76[v78[2]]=v76[v78[3]] + v76[v78[4]] ;end elseif (v79==66) then if (v76[v78[2]]~=v78[4]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v78[3];end elseif (v79<=71) then if (v79<=69) then if (v79==68) then local v234=v78[2];local v235,v236=v69(v76[v234](v76[v234 + 1 ]));v71=(v236 + v234) -1 ;local v237=0;for v319=v234,v71 do local v320=0;while true do if (v320==0) then v237=v237 + 1 ;v76[v319]=v235[v237];break;end end end else v76[v78[2]]= #v76[v78[3]];end elseif (v79==70) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v76[v78[3]] -v76[v78[4]] ;end elseif (v79<=73) then if (v79==72) then local v240=v78[2];do return v13(v76,v240,v240 + v78[3] );end else v76[v78[2]]=v76[v78[3]] -v76[v78[4]] ;end elseif (v79==74) then if (v76[v78[2]]~=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v78[3];end elseif (v79<=82) then if (v79<=78) then if (v79<=76) then v76[v78[2]][v78[3]]=v78[4];elseif (v79>77) then v76[v78[2]]=v76[v78[3]] + v78[4] ;else v76[v78[2]]={};end elseif (v79<=80) then if (v79>79) then if  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else local v246=v78[2];do return v76[v246](v13(v76,v246 + 1 ,v78[3]));end end elseif (v79==81) then v76[v78[2]]=v76[v78[3]] + v76[v78[4]] ;else v76[v78[2]]=v29(v67[v78[3]],nil,v62);end elseif (v79<=86) then if (v79<=84) then if (v79>83) then if (v76[v78[2]]<=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v249=v78[2];local v250={v76[v249](v13(v76,v249 + 1 ,v71))};local v251=0;for v321=v249,v78[4] do local v322=0;while true do if (v322==0) then v251=v251 + 1 ;v76[v321]=v250[v251];break;end end end end elseif (v79==85) then v76[v78[2]]=v76[v78[3]];else v76[v78[2]]=v29(v67[v78[3]],nil,v62);end elseif (v79<=88) then if (v79==87) then v76[v78[2]]=v76[v78[3]][v76[v78[4]]];else local v257=0;local v258;while true do if (v257==0) then v258=v78[2];do return v76[v258](v13(v76,v258 + 1 ,v78[3]));end break;end end end elseif (v79==89) then local v259=v78[2];v76[v259]=v76[v259](v76[v259 + 1 ]);elseif (v78[2]<v76[v78[4]]) then v70=v78[3];else v70=v70 + 1 ;end elseif (v79<=105) then if (v79<=97) then if (v79<=93) then if (v79<=91) then if (v76[v78[2]]<=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79>92) then v76[v78[2]]=v78[3]~=0 ;else for v323=v78[2],v78[3] do v76[v323]=nil;end end elseif (v79<=95) then if (v79>94) then local v263=0;local v264;while true do if (0==v263) then v264=v78[2];v76[v264]=v76[v264](v13(v76,v264 + 1 ,v78[3]));break;end end else v76[v78[2]][v76[v78[3]]]=v76[v78[4]];end elseif (v79==96) then local v267=0;local v268;while true do if (v267==0) then v268=v78[2];v76[v268]=v76[v268]();break;end end elseif (v78[2]<=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=101) then if (v79<=99) then if (v79==98) then local v269=0;local v270;local v271;local v272;local v273;while true do if (0==v269) then v270=v78[2];v271,v272=v69(v76[v270](v76[v270 + 1 ]));v269=1;end if (v269==1) then v71=(v272 + v270) -1 ;v273=0;v269=2;end if (v269==2) then for v396=v270,v71 do local v397=0;while true do if (0==v397) then v273=v273 + 1 ;v76[v396]=v271[v273];break;end end end break;end end else v76[v78[2]][v78[3]]=v78[4];end elseif (v79>100) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v276=v78[2];v76[v276]=v76[v276](v13(v76,v276 + 1 ,v71));end elseif (v79<=103) then if (v79==102) then v61[v78[3]]=v76[v78[2]];else v62[v78[3]]=v76[v78[2]];end elseif (v79>104) then v76[v78[2]]=v76[v78[3]]/v78[4] ;else v76[v78[2]]=v76[v78[3]][v76[v78[4]]];end elseif (v79<=113) then if (v79<=109) then if (v79<=107) then if (v79>106) then local v285=v78[2];v76[v285](v76[v285 + 1 ]);else v76[v78[2]]();end elseif (v79>108) then do return;end elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=111) then if (v79>110) then if (v76[v78[2]]<v76[v78[4]]) then v70=v78[3];else v70=v70 + 1 ;end else for v325=v78[2],v78[3] do v76[v325]=nil;end end elseif (v79>112) then do return;end else local v286=0;local v287;local v288;while true do if (v286==1) then for v398=1, #v75 do local v399=v75[v398];for v406=0, #v399 do local v407=0;local v408;local v409;local v410;while true do if (1==v407) then v410=v408[2];if ((v409==v76) and (v410>=v287)) then v288[v410]=v409[v410];v408[1]=v288;end break;end if (v407==0) then v408=v399[v406];v409=v408[1];v407=1;end end end end break;end if (v286==0) then v287=v78[2];v288={};v286=1;end end end elseif (v79<=117) then if (v79<=115) then if (v79>114) then v70=v78[3];else v76[v78[2]]();end elseif (v79==116) then v62[v78[3]]=v76[v78[2]];elseif (v76[v78[2]]~=v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=119) then if (v79==118) then v76[v78[2]]=v78[3]^v76[v78[4]] ;else v76[v78[2]]=v78[3]~=0 ;v70=v70 + 1 ;end elseif (v79>120) then v76[v78[2]]=v76[v78[3]] * v78[4] ;elseif (v78[2]<=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end v70=v70 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
